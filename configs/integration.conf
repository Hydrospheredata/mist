# spark master
mist.context-defaults.spark-conf = {
  spark.master = "local[*]"
}

mist.hive.test = true

mist.http.on = true
mist.http.host = "localhost"
mist.http.port = 2004
mist.http.router-config-path = "configs/router.conf"

mist.mqtt.on = true
mist.mqtt.host = "mosquitto"
mist.mqtt.port = 1883
mist.mqtt.subscribe-topic = "foo"
mist.mqtt.publish-topic = "foo"

mist.recovery.on = true
mist.recovery.multilimit = 10
mist.recovery.typedb = "MapDb"
mist.recovery.dbfilename = "file.db"

mist.workers.runner = "local"

mist.context.foo.timeout = 100 days

mist.context-defaults.disposable = false

mist.context.foo.spark-conf = {
  spark.default.parallelism = 4
  spark.driver.memory = "1024m"
  spark.executor.memory = "512m"
  spark.scheduler.mode = "FAIR"
  spark.driver.allowMultipleContexts = true
}

mist.context.testtimeout.timeout = 1 nanoseconds


mist.akka {
  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
  }

  remote {
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = "localhost"
    }
    transport-failure-detector {
      heartbeat-interval = 30s
      acceptable-heartbeat-pause = 5s
    }
  }

  cluster {
    seed-nodes = ["akka.tcp://mist@localhost:2554"]
    auto-down-unreachable-after = 10s
  }

  log-dead-letters-during-shutdown = off
}

mist.main.akka {
  remote.netty.tcp.port = 2554
}

mist.worker.akka {
  remote.netty.tcp.port = 0
}
