#!/usr/bin/env bash

export MIST_HOME="$(cd "`dirname "$0"`"/..; pwd)"
JAVA=$(which java)

ASSEMBLY_JAR=$MIST_HOME/mist.jar

CONFIG_FILE=$MIST_HOME/configs/default.conf
NAMESPACE=""
JAVA_ARGS=""
RUNNER="local"

while [[ $# > 1 ]]
do
  key="$1"
  case ${key} in
    --namespace)
      NAMESPACE="$2"
      shift
      ;;

    --config)
      CONFIG_FILE="$2"
      shift
      ;;

    --run-options)
      RUN_OPTIONS="$2"
      shift
      ;;

    --java-args)
      JAVA_ARGS="$2"
      shift
      ;;

    --docker-host)
      DOCKER_HOST="$2"
      shift
      ;;

    --docker-port)
      DOCKER_PORT="$2"
      shift
      ;;

    --runner)
      RUNNER="$2"
      shift
      ;;
  esac
shift
done

function startWorker() {
    if [ "$NAMESPACE" == '' ]
    then
        (>&2 echo "You must specify --namespace")
        exit 3
    fi

    if [ "$SPARK_HOME" == '' ]
    then
        (>&2 echo "You must specify SPARK_HOME env variable")
        exit 3
    fi

    export PYTHONPATH="$SPARK_HOME/python:`readlink -f ${SPARK_HOME}/python/lib/py4j*`:$PYTHONPATH"

    SPARK_SUBMIT="${SPARK_HOME}/bin/spark-submit"
    MAIN_CLASS="io.hydrosphere.mist.worker.Worker"
    DRIVER_JAVA_OPTIONS="-Dconfig.file=$CONFIG_FILE"
    DRIVER_JAVA_OPTIONS="$DRIVER_JAVA_OPTIONS -Dakka.roles.1=worker-$NAMESPACE"
    DRIVER_JAVA_OPTIONS="$DRIVER_JAVA_OPTIONS $JAVA_ARGS" 

    exec $SPARK_SUBMIT --class $MAIN_CLASS --driver-java-options "$DRIVER_JAVA_OPTIONS" $RUN_OPTIONS $ASSEMBLY_JAR $NAMESPACE
}

function startWorkerContainer() {
    if [ "$DOCKER_HOST" == 'localhost' ] || [ "${DOCKER_HOST}" == '127.0.0.1' ]
    then
        export socket="--unix-socket /var/run/docker.sock"
    fi

    parentContainer=`curl -s -X GET $socket -H "Content-Type: application/json" http://$DOCKER_HOST:$DOCKER_PORT/containers/$HOSTNAME/json`
    containerName=`echo $parentContainer | jq -r '.Name'`
    image=`echo $parentContainer | jq -r '.Config.Image'`
    links="[\"$containerName:/master\"]"
    labels=`echo $parentContainer | jq -r '.Config.Labels'`
    config=`base64 -w 0 $MIST_HOME/configs/default.conf`
    request="{
        \"Image\":\"$image\",
        \"Cmd\": [
            \"worker\",
            \"$NAMESPACE\",
            \"$CONFIG\",
            \"$RUN_OPTIONS\"
        ],
        \"Labels\": $labels,
        \"HostConfig\": {
            \"Links\": $links
        }
    }"

    containerId=`curl -s -X POST $socket -H "Content-Type: application/json" http://$DOCKER_HOST:$DOCKER_PORT/containers/create -d "$request" | jq -r '.Id'`
    curl -s -X POST $socket -H "Content-Type: application/json" http://$DOCKER_HOST:$DOCKER_PORT/containers/${containerId}/start
}

if [ "$RUNNER" == 'local' ]
then
     startWorker
elif [ "$RUNNER" == 'docker' ]
then
    startWorkerContainer
else
    (>&2 echo "runner arg $RUNNER is invalid")
    exit 3
fi
